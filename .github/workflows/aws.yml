name: CI / CD

on:
  push:
    branches: [main]

jobs:
  gradle_build:
    runs-on: ubuntu-latest
    steps:   
    - name: Set the value
      run: |
        echo "GITHUB_SHA=${GITHUB_SHA::7}" >> $GITHUB_ENV
        echo "ip_address=$(curl ifconfig.io)" >> $GITHUB_ENV
    - uses: actions/checkout@v2
    - uses: actions/setup-java@v2
      with:
        distribution: temurin
        java-version: 11

    - name: Setup Gradle
      uses: gradle/gradle-build-action@v2
      
    - name: Make gradle executable
      run: chmod +x ./gradlew

    - name: Execute Gradle build
      run: ./gradlew build

    - name: copy *.war file to Dockerfile
      run: |
        cp ./build/libs/*.war ./Dockerfile
        
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1

    - name: Login to DockerHub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
          
    - name: Build and push
      uses: docker/build-push-action@v2
      with:
        context: ./Dockerfile
        push: true
        tags: |
         ${{ secrets.DOCKERHUB_USERNAME }}/${{ secrets.DOCKERHUB_REPOSITORY }}:latest
         ${{ secrets.DOCKERHUB_USERNAME }}/${{ secrets.DOCKERHUB_REPOSITORY }}:${{ env.GITHUB_SHA }}-${{github.run_number}}
         
    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ secrets.EKS_REGION }}

    - name: Connect to EKS cluster 
      run: aws eks --region ${{ secrets.EKS_REGION }} update-kubeconfig --name ${{ secrets.EKS_CLUSTER_NAME }}

    - name: Get public IP
      id: ip
      uses: haythem/public-ip@v1.2

    - name: EKS cluster endpoint access control
      run: |
        aws eks update-cluster-config \
        --region ${{ secrets.EKS_REGION }} \
        --name ${{ secrets.EKS_CLUSTER_NAME }} \
        --resources-vpc-config endpointPublicAccess=true,publicAccessCidrs="${{ env.ip_address }}/32",endpointPrivateAccess=true

    - name: deploy
      run: |
        kubectl set image deploy/was-deploy java=${{ secrets.DOCKERHUB_USERNAME }}/${{ secrets.DOCKERHUB_REPOSITORY }}:${GITHUB_SHA::7}-${GITHUB_RUN_NUMBER}

    - name: Copy files to the test website with the AWS CLI
      run: |
        aws s3 mv ./build/libs/*.war s3://${{ secrets.EKS_BUCKET_NAME }}/warfile_backup/`date +%Y%m%d`_${GITHUB_SHA::7}/


