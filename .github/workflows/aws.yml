name: Deploy to aws eks

on:
  push:
    branches: [main]
    
  workflow_dispatch:
  
jobs:
  gradle_build:
    
        runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - uses: actions/setup-java@v2
      with:
        distribution: temurin
        java-version: 11

    - name: Setup Gradle
      uses: gradle/gradle-build-action@v2
      
    - name: Make gradle executable
      run: chmod +x ./gradlew

    - name: Execute Gradle build
      run: ./gradlew build

    - name: copy *.war file to Dockerfile
      run: |
        cp ./build/libs/*.war ./Dockerfile
  
 aws_credentials:
    runs-on: ubuntu-latest
    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ secrets.EKS_REGION }}
        
    - name: Connect to EKS cluster 
      run: aws eks --region ${{ secrets.EKS_REGION }} update-kubeconfig --name ${{ secrets.EKS_CLUSTER_NAME }}

    - name: Get public IP
      id: ip
      uses: haythem/public-ip@v1.2

    - name: EKS cluster endpoint access control
      run: |
        aws eks update-cluster-config \
        --region ${{ secrets.EKS_REGION }} \
        --name ${{ secrets.EKS_CLUSTER_NAME }} \
        --resources-vpc-config endpointPublicAccess=true,publicAccessCidrs="${{ steps.ip.outputs.ipv4 }}/32",endpointPrivateAccess=true
        
    needs: [docker_build_push]
    - name: deploy
      run: |
        kubectl set image deploy/was-deploy java=${{ secrets.DOCKERHUB_USERNAME }}/${{ secrets.DOCKERHUB_REPOSITORY }}:${GITHUB_SHA::7}-${GITHUB_RUN_NUMBER}
        
    - name: Copy files to the test website with the AWS CLI
      run: |
        aws s3 mv ./build/libs/*.war s3://${{ secrets.EKS_BUCKET_NAME }}/warfile_backup/${GITHUB_SHA::7}_`date +%Y%m%d`/
        
  docker_build_push:
    uses: seunghayim/m-dev/.github/workflows/docker.yml@main
    secrets:
      DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
      DOCKERHUB_TOKEN: ${{ secrets.DOCKERHUB_TOKEN }}
      DOCKERHUB_REPOSITORY: ${{ secrets.DOCKERHUB_REPOSITORY }}
